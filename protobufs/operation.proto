syntax = "proto3";
option go_package = "protobuf";
package storage;

import "item.proto";

// Default value means all of these are off, meaning a default request will return you:
// Only the key and there will be no limit
message Config {
  // KeysOnly makes sense only in the context of a non-direct query
  bool data = 1;
  // Don't try to control the iterator through the RPC, let the interface take care of that and sent to a different
  // handler if this is set
  // bool singlePayload = 2;
  int64 limit = 2;
  
  EnumOperationType type = 3;
}

// Filterset contains the set of information making up the filter operation
message FilterSet {
  string key = 1;
  string op = 2;
  bytes value = 3;
}

message Filter {
  // The ID will be - key:op:value; this might be used in the return
  string ID = 1;

  // These values will be AND'd together during the query
  repeated FilterSet set = 2;

  // Filter-level config; the global override config will be taken into account BEFORE the local config
  Config cfg = 3;
}

enum EnumOperationType {
  GET = 0;
  SET = 1;
  DELETE = 2;
}

message Direct {
  EnumOperationType type = 1;
  repeated Item items = 2;
}

message Override {
  // Limit override for the entire query
  int32 limit = 1;
}

enum EnumStatusCode {
  UNKNOWN = 0;
  SUCCESS = 1;
  NOT_FOUND = 2;
  ALREADY_DELETED = 3;
}

message Status {
  EnumStatusCode code = 1;
  string description = 2;
}