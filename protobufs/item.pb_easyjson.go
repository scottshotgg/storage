// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  protobuf

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Config ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Config ) UnmarshalJSON([]byte) error { return nil }
func ( Config ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Config ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Config *Config

func ( Direct ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Direct ) UnmarshalJSON([]byte) error { return nil }
func ( Direct ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Direct ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Direct *Direct

func ( Filter ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Filter ) UnmarshalJSON([]byte) error { return nil }
func ( Filter ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Filter ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Filter *Filter

func ( Item ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Item ) UnmarshalJSON([]byte) error { return nil }
func ( Item ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Item ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Item *Item

func ( ItemRes ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ItemRes ) UnmarshalJSON([]byte) error { return nil }
func ( ItemRes ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ItemRes ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ItemRes *ItemRes

func ( Query ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Query ) UnmarshalJSON([]byte) error { return nil }
func ( Query ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Query ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Query *Query

func ( QueryRes ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* QueryRes ) UnmarshalJSON([]byte) error { return nil }
func ( QueryRes ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* QueryRes ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_QueryRes *QueryRes

func ( Res ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Res ) UnmarshalJSON([]byte) error { return nil }
func ( Res ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Res ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Res *Res

func ( Res_ID ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Res_ID ) UnmarshalJSON([]byte) error { return nil }
func ( Res_ID ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Res_ID ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Res_ID *Res_ID

func ( Res_Item ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Res_Item ) UnmarshalJSON([]byte) error { return nil }
func ( Res_Item ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Res_Item ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Res_Item *Res_Item

func ( Status ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Status ) UnmarshalJSON([]byte) error { return nil }
func ( Status ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Status ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Status *Status
